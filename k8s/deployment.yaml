apiVersion: v1
kind: Namespace
metadata:
  name: producer-consumer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-data
  namespace: producer-consumer
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-log
  namespace: producer-consumer
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: producer-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: rabbitmq-prometheus
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-log
              mountPath: /var/log/rabbitmq
          resources:
            limits:
              memory: "1Gi"
              cpu: "2"
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - ping
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
        - name: rabbitmq-log
          persistentVolumeClaim:
            claimName: rabbitmq-log

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: producer-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
        - name: producer
          image: gabrielfsil/producer:latest
          ports:
            - containerPort: 3333
          command: ["npm", "run", "start"]
          resources:
            limits:
              memory: "1Gi"
              cpu: "2"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: producer-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
        - name: consumer
          image: gabrielfsil/consumer:latest
          ports:
            - containerPort: 3334
          command: ["npm", "run", "start"]
          resources:
            limits:
              memory: "1Gi"
              cpu: "2"

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: producer-consumer
spec:
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672
  selector:
    app: rabbitmq

---
apiVersion: v1
kind: Service
metadata:
  name: producer
  namespace: producer-consumer
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3333
      nodePort: 30000
  selector:
    app: producer

---
apiVersion: v1
kind: Service
metadata:
  name: consumer
  namespace: producer-consumer
spec:
  type: LoadBalancer
  ports:
    - port: 3334
      targetPort: 3334
      nodePort: 30001
  selector:
    app: consumer

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: producer
  namespace: producer-consumer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: producer
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 30

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: consumer
  namespace: producer-consumer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: consumer
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 30