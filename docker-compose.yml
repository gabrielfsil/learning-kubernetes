name: "producer-consumer"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: rabbitmq-prometheus
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_net
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    cpu_count: 2
    mem_limit: 1g

  producer:
    build:
      context: ./producer
      dockerfile: ./docker/Dockerfile
    container_name: producer
    ports:
      - 3333:3333
    command: npm run start
    networks:
      - rabbitmq_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    cpu_count: 2
    mem_limit: 1g

  consumer:
    build:
      context: ./consumer
      dockerfile: ./docker/Dockerfile
    container_name: consumer
    ports:
      - "3334:3334"
    command: npm run start
    networks:
      - rabbitmq_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    cpu_count: 2
    mem_limit: 1g

  grafana:
    # https://hub.docker.com/r/grafana/grafana/tags
    image: grafana/grafana:8.3.4
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - "rabbitmq_net"
    volumes:
      - rabbitmq-prometheus_grafana:/var/lib/grafana
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/rabbitmq.yaml
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yaml
      - ./grafana/dashboards:/dashboards
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_INSTALL_PLUGINS: "flant-statusmap-panel,grafana-piechart-panel"
      GF_SESSION_PROVIDER: "file"
      GF_SESSION_PROVIDER_CONFIG: "/var/lib/grafana/sessions"
      GF_SECURITY_COOKIE_SAMESITE: "none"
    depends_on:
      - prometheus
      - consumer
      - producer

  prometheus:
    # https://hub.docker.com/r/prom/prometheus/tags
    image: prom/prometheus:v2.28.1
    container_name: prometheus
    networks:
      - "rabbitmq_net"
    ports:
      - "9090:9090"
    volumes:
      - rabbitmq-prometheus_prometheus:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - rabbitmq
      - consumer
      - producer

networks:
  rabbitmq_net:
    driver: bridge

volumes:
  rabbitmq-prometheus_prometheus:
  rabbitmq-prometheus_grafana:
